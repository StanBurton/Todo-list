{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","term","onTermChange","e","target","value","setState","props","onToggleTerm","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","filter","newFilter","onToggleView","classNameChoose","ItemAddForm","onlabelChange","onSubmit","preventDefault","onAddItem","App","maxId","todoData","createItem","addItem","text","deleteItem","idx","findIndex","el","before","slice","after","toggleProperty","arr","propName","oldItem","newItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"4WAYeA,G,MARG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvB,OACI,yBAAKC,UAAU,qBACX,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,YCJSE,G,iNACnBC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAAAC,GACb,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAAEL,SAChB,EAAKM,MAAMC,aAAaP,I,wEAIxB,OACE,2BACEH,UAAU,4BACVW,YAAY,iBACZC,SAAUC,KAAKT,aACfG,MAAOM,KAAKX,MAAMC,W,GAjBeW,c,QCyC1BC,G,MAzCM,SAAC,GAOf,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,UACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,aAIIC,EAAa,eAQjB,OATI,EAFJrB,OAKEqB,GAAc,SAHZ,EADJC,YAOED,GAAc,cAId,0BAAMpB,UAAWoB,GACf,0BAAMpB,UAAU,oBAAoBsB,QAASH,GAC1CH,GAGH,4BACEO,KAAK,SACLvB,UAAU,6CACVsB,QAASJ,GAET,uBAAGlB,UAAU,uBAGf,4BACEuB,KAAK,SACLvB,UAAU,4CACVsB,QAASL,GAET,uBAAGjB,UAAU,sBCfNwB,G,MAnBE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOR,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aACjDO,EAAWD,EAAME,KAAI,SAAAC,GAAS,IAC1BC,EAAqBD,EAArBC,GAAOC,EADkB,YACJF,EADI,QAGjC,OACE,wBAAIG,IAAKF,EAAI7B,UAAU,mBACrB,kBAAC,EAAD,iBACM8B,EADN,CAEEb,UAAW,kBAAMA,EAAUY,IAC3BX,kBAAmB,kBAAMA,EAAkBW,IAC3CV,aAAc,kBAAMA,EAAaU,WAMzC,OAAO,wBAAI7B,UAAU,uBAAuB0B,KCjBzBM,G,8LAEHC,EAAQC,GACtB,OAAID,IAAWC,EACN,eAEF,8B,+BAGC,IAAD,EAC0BrB,KAAKJ,MAA9B0B,EADD,EACCA,aAAcF,EADf,EACeA,OAEtB,OACE,yBAAKjC,UAAU,aACb,4BACEuB,KAAK,SACLvB,UAAWa,KAAKuB,gBAAgBH,EAAQ,OACxCX,QAAS,kBAAMa,EAAa,SAH9B,OAOA,4BACEZ,KAAK,SACLvB,UAAWa,KAAKuB,gBAAgBH,EAAQ,UACxCX,QAAS,kBAAMa,EAAa,YAH9B,UAOA,4BACEZ,KAAK,SACLvB,UAAWa,KAAKuB,gBAAgBH,EAAQ,QACxCX,QAAS,kBAAMa,EAAa,UAH9B,a,GA5BsCrB,cCAzBuB,G,iNACnBnC,MAAQ,CACNc,MAAO,I,EAGTsB,cAAgB,SAAAjC,GACd,EAAKG,SAAS,CACZQ,MAAOX,EAAEC,OAAOC,S,EAIpBgC,SAAW,SAAAlC,GACTA,EAAEmC,iBACF,EAAK/B,MAAMgC,UAAU,EAAKvC,MAAMc,OAChC,EAAKR,SAAS,CACZQ,MAAO,M,wEAKT,OACE,0BAAMhB,UAAU,qBAAqBuC,SAAU1B,KAAK0B,UAClD,2BACEhB,KAAK,OACLvB,UAAU,eACVY,SAAUC,KAAKyB,cACf3B,YAAY,wBACZJ,MAAOM,KAAKX,MAAMc,QAEpB,4BAAQhB,UAAU,6BAAlB,iB,GA7BiCc,c,wOCMpB4B,E,2MACnBC,MAAQ,I,EAERzC,MAAQ,CACN0C,SAAU,CACR,EAAKC,WAAW,YAChB,EAAKA,WAAW,eAChB,EAAKA,WAAW,oBAChB,EAAKA,WAAW,2BAChB,EAAKA,WAAW,gBAChB,EAAKA,WAAW,cAElBZ,OAAQ,SACR9B,KAAM,I,EAYR2C,QAAU,SAAAC,GACR,EAAKvC,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACThB,EAAO,EAAKiB,WAAWE,GAE7B,MAAO,CACLH,SAFY,sBAAOA,GAAP,CAAiBhB,S,EAOnCoB,WAAa,SAAAnB,GACX,EAAKrB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACTK,EAAML,EAASM,WAAU,SAAAC,GAAE,OAAIA,EAAGtB,KAAOA,KAOzCuB,EAASR,EAASS,MAAM,EAAGJ,GAC3BK,EAAQV,EAASS,MAAMJ,EAAM,GAGnC,MAAO,CACLL,SAHY,sBAAOQ,GAAP,YAAkBE,S,EAiBpCpC,kBAAoB,SAAAW,GAClB,EAAKrB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKW,eAAeX,EAAUf,EAAI,kB,EAKlDV,aAAe,SAAAU,GACb,EAAKrB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKW,eAAeX,EAAUf,EAAI,a,EAKlDM,aAAe,SAAAF,GACb,EAAKzB,SAAS,CAAEyB,Y,EAGlBvB,aAAe,SAAAP,GACb,EAAKK,SAAS,CAAEL,U,0EApEPa,GACT,MAAO,CACLA,QACAK,WAAW,EACXtB,MAAM,EACN8B,GAAIhB,KAAK8B,W,qCAiCEa,EAAK3B,EAAI4B,GACtB,IAAMR,EAAMO,EAAIN,WAAU,SAAAC,GAAE,OAAIA,EAAGtB,KAAOA,KAEpC6B,EAAUF,EAAIP,GACdU,E,yVAAO,IAAQD,EAAR,eAAkBD,GAAYC,EAAQD,KAEnD,MAAM,GAAN,mBAAWD,EAAIH,MAAM,EAAGJ,IAAxB,CAA8BU,GAA9B,YAA0CH,EAAIH,MAAMJ,EAAM,O,6BA2BrDW,EAAO3B,GACZ,OAAQA,GACN,IAAK,MACH,OAAO2B,EACT,IAAK,SACH,OAAOA,EAAM3B,QAAO,SAAAkB,GAAE,OAAKA,EAAGpD,QAChC,IAAK,OACH,OAAO6D,EAAM3B,QAAO,SAAAkB,GAAE,OAAIA,EAAGpD,QAC/B,QAAS,OAAO6D,K,6BAIbA,EAAOzD,GACZ,OAAoB,IAAhBA,EAAK0D,OACAD,EAEFA,EAAM3B,QAAO,SAAAL,GAAU,OAAOA,EAAKZ,MAAM8C,cAAcC,QAAQ5D,EAAK2D,gBAAkB,O,+BAGrF,IAAD,EAC4BjD,KAAKX,MAAhC0C,EADD,EACCA,SAAUX,EADX,EACWA,OAAQ9B,EADnB,EACmBA,KAEpB6D,EAAenD,KAAKoB,OAAOpB,KAAKoD,OAAOrB,EAAUzC,GAAO8B,GAGxDiC,EAAYtB,EAASX,QAAO,SAAAkB,GAAE,OAAIA,EAAGpD,QAAM8D,OAC3CM,EAAYvB,EAASiB,OAASK,EAEpC,OACE,yBAAKlE,UAAU,YACb,kBAAC,EAAD,CAAWF,KAAMqE,EAAWpE,KAAMmE,IAClC,yBAAKlE,UAAU,oBACb,kBAAC,EAAD,CAAaU,aAAcG,KAAKH,eAChC,kBAAC,EAAD,CACEyB,aAActB,KAAKsB,aACnBF,OAAQA,KAIZ,kBAAC,EAAD,CACER,MAAOuC,EACP/C,UAAWJ,KAAKmC,WAChB9B,kBAAmBL,KAAKK,kBACxBC,aAAcN,KAAKM,eAGrB,kBAAC,EAAD,CAAasB,UAAW5B,KAAKiC,e,GArIJhC,aCLjCsD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.87cb1094.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = ({ todo, done }) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{todo} more to do, {done} done</h2>\r\n        </div>)\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from \"react\";\r\n\r\nimport \"./SearchPanel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: '',\r\n  };\r\n\r\n  onTermChange = e => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onToggleTerm(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        onChange={this.onTermChange}\r\n        value={this.state.term}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./TodoListItem.css\";\r\n\r\nconst TodoListItem = ({\r\n  label,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n  done,\r\n  important,\r\n}) => {\r\n  let classNames = \"todolistitem\";\r\n  if (done) {\r\n    classNames += \" done\";\r\n  }\r\n  if (important) {\r\n    classNames += \" important\";\r\n  }\r\n\r\n  return (\r\n    <span className={classNames}>\r\n      <span className=\"todolistitemlabel\" onClick={onToggleDone}>\r\n        {label}\r\n      </span>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm float-right\"\r\n        onClick={onToggleImportant}\r\n      >\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm float-right\"\r\n        onClick={onDeleted}\r\n      >\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\n\r\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map(item => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todolist\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ItemStatusFilter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  classNameChoose(filter, newFilter) {\r\n    if (filter === newFilter) {\r\n      return \"btn btn-info\";\r\n    }\r\n    return \"btn btn-outline-secondary\";\r\n  }\r\n\r\n  render() {\r\n    const { onToggleView, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className={this.classNameChoose(filter, 'all')}\r\n          onClick={() => onToggleView(\"all\")}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={this.classNameChoose(filter, 'active')}\r\n          onClick={() => onToggleView(\"active\")}\r\n        >\r\n          Active\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={this.classNameChoose(filter, 'done')}\r\n          onClick={() => onToggleView(\"done\")}\r\n        >\r\n          Done\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ItemAddForm.css\";\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  onlabelChange = e => {\r\n    this.setState({\r\n      label: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({\r\n      label: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"itemaddform d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onlabelChange}\r\n          placeholder=\"What needs to be done\"\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"./AppHeader/AppHeader\";\r\nimport SearchPanel from \"./SearchPanel/SearchPanel\";\r\nimport TodoList from \"./TodoList/TodoList\";\r\nimport ItemStatusFilter from \"./ItemStatusFilter/ItemStatusFilter\";\r\nimport ItemAddForm from \"./ItemAddForm/ItemAddForm\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createItem(\"Add task\"),\r\n      this.createItem(\"Delete task\"),\r\n      this.createItem(\"Perform the task\"),\r\n      this.createItem(\"Make the task important\"),\r\n      this.createItem(\"Filter tasks\"),\r\n      this.createItem(\"Find task\")\r\n    ],\r\n    filter: \"active\",\r\n    term: ''\r\n  };\r\n\r\n  createItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  }\r\n\r\n  addItem = text => {\r\n    this.setState(({ todoData }) => {\r\n      const item = this.createItem(text);\r\n      const newArray = [...todoData, item];\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex(el => el.id === id);\r\n\r\n      ///we don't use \"todoData.splice\" because it will change state\r\n      ///like \"this.state.todoData = smth\"\r\n      ///then we need to create new Array without element, which we will delete\r\n      ///this is react's rule: don't change state directly\r\n\r\n      const before = todoData.slice(0, idx);\r\n      const after = todoData.slice(idx + 1);\r\n      const newArray = [...before, ...after];\r\n\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex(el => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleView = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  onToggleTerm = term => {\r\n    this.setState({ term })\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter(el => !el.done);\r\n      case 'done':\r\n        return items.filter(el => el.done);\r\n      default: return items;\r\n    }\r\n  }\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter(item => { return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1 })\r\n  };\r\n\r\n  render() {\r\n    const { todoData, filter, term } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n\r\n    const doneCount = todoData.filter(el => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader todo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onToggleTerm={this.onToggleTerm} />\r\n          <ItemStatusFilter\r\n            onToggleView={this.onToggleView}\r\n            filter={filter}\r\n          />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n\r\n        <ItemAddForm onAddItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}